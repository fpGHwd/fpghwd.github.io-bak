<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wd's blog (Posts about openSUSE)</title><link>https://fpghwd.github.io/</link><description></description><atom:link href="https://fpghwd.github.io/categories/opensuse.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:ggwdwhu@gmail.com"&gt;Wang Ding&lt;/a&gt; </copyright><lastBuildDate>Sun, 28 Mar 2021 07:30:51 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>openSUSE 上 mariadb 的使用</title><link>https://fpghwd.github.io/posts/opensuse-shang-mariadb-de-shi-yong/</link><dc:creator>Wang Ding</dc:creator><description>&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;p&gt;
缘起
&lt;/p&gt;

&lt;p&gt;
因为论文做实验要用到数据库，虽然有个远程的数据库可以使用，但是还是想在本地装一个数据库。使用的是 openSUSE Tumbleweed.
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
安装使用
&lt;/p&gt;

&lt;p&gt;
在装系统的时候应该已经安装了 mariadb, 但是登录 &lt;code&gt;mysql -u root -p&lt;/code&gt; 的时候总是提示： &lt;code&gt;ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/run/mysql/mysql.sock (2)'&lt;/code&gt;
&lt;/p&gt;


&lt;div id="org05ad9d2" class="figure"&gt;
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/fpGHwd/fpghwd.github.io/master/images/_20201129_160638screenshot.png" alt="_20201129_160638screenshot.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
不过也可能是因为密码错误，准备&lt;a href="https://www.jianshu.com/p/7f508027419a"&gt;重置密码&lt;/a&gt;后跳过密码登录，但是依然出现这个提示。
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
mysql 用户组
&lt;/p&gt;

&lt;p&gt;
后来想到可能是用户组的原因，于是在 yast/Users 中将自己的用户加入 mysql 用户组。
&lt;/p&gt;


&lt;div id="orgb1ae3a8" class="figure"&gt;
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/fpGHwd/fpghwd.github.io/master/images/_20201129_160825screenshot.png" alt="_20201129_160825screenshot.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
尝试登录后提示密码错误。应该是可以了。
&lt;/p&gt;


&lt;div id="org838d0bd" class="figure"&gt;
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/fpGHwd/fpghwd.github.io/master/images/_20201129_160845screenshot.png" alt="_20201129_160845screenshot.png"&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;</description><category>ATTACH</category><category>openSUSE</category><guid>https://fpghwd.github.io/posts/opensuse-shang-mariadb-de-shi-yong/</guid><pubDate>Sun, 29 Nov 2020 00:09:05 GMT</pubDate></item><item><title>Replace v2ray config outbounds with vmess</title><link>https://fpghwd.github.io/posts/replace-outbound-in-vmess-urlgfw-with-your-down-v2ray-config-file/</link><dc:creator>Wang Ding</dc:creator><description>&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;p&gt;
v2ray on linux
&lt;/p&gt;

&lt;p&gt;
v2ray 在 linux 平台上&lt;a href="https://github.com/v2ray/v2ray-core/issues/1517"&gt;并不也不计划&lt;/a&gt;支持将 vmess-url 转换成可用的 v2ray 配置文件（我猜考虑到这些有端口和系统代理设置而在 linux 平台上这些是单独的功能）。也有人使用 python 脚本转换，&lt;a href="https://github.com/boypt/vmess2json"&gt;代码&lt;/a&gt;没有仔细看。不过我想到自己已经有在使用的配置文件，即使转化 vmess url 也不能完全用，有用的部分是 outbounds （即出口部分，提供 v2ray 服务的主机相关），所以打断取出 vmess url 的 outbound 部分合并到现有的 &lt;i&gt;/etc/v2ray/config.json&lt;/i&gt; 中使用。
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
目标
&lt;/p&gt;

&lt;p&gt;
目标是将 vmess-url 转换成可用的 v2ray 配置文件，然后抽取其中的 outbounds[0] 替换原有 v2ray 配置文件的 outbounds[0] 部分。因为原有文件设置的路由还有 inbounds 已经有而且不打算更改这部分内容。
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
vmess urls
&lt;/p&gt;

&lt;p&gt;
将可得的所有的 vmess urls 存入一个文件 &lt;code&gt;vmess-url.info&lt;/code&gt; 。
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
命令行 json 操作
&lt;/p&gt;

&lt;p&gt;
安装 v2ray-tools 工具: &lt;code&gt;npm -g install v2ray-tools&lt;/code&gt; 。
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
转换 shell 脚本
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-shell"&gt;
    vmess_file_path=$1      # vmdss-url.info 路径
    line_num=$2             # 使用的 vmess-url 行号
    config_file_path=$3     # 待合并的原配置。一般是 /etc/v2ray/config.json
    output_config_file_path=$4  # 合并后的 config.json

    line=`sed -n $(line_num)p $vmess_file_path`                         # 获取 vmess-url
    result=`v2ray-tools vmess2config --port 8080 --url $line`           # 利用 v2ray-tools 生成配置文件
    outbound0=`echo $result | jq '.outbounds[0]'`                       # 获取生成配置文件的 outbounds[0] 部分
    config=`cat "/etc/v2ray/config.json"`                               # 获取原配置
    replace_config=`echo $config | jq -r ".outbounds[0]=$outbound0"`    # 替换原配置的 outbounds[0] 为 vmess-url 的 outbounds[0]
    echo '$replace_config' &amp;gt; $output_config_file_path                   # 写出文件，也可以直接写入 /etc/v2ray/config.json 需要 root 权限

    # usage: vmess-url-to-config-json.sh ~/vmess-url.info 2 /etc/config/config.json ~/config.json

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
这样就得到了 config.json 文件，然后可用 v2ray 检查： &lt;code&gt;v2ray -test -config ~/config.json&lt;/code&gt; 。可替换系统的默认配置文件 &lt;code&gt;/etc/v2ray/config.json&lt;/code&gt; ，并重启服务 &lt;code&gt;sudo systemctl restart v2ray.service&lt;/code&gt; 。
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</description><category>openSUSE</category><guid>https://fpghwd.github.io/posts/replace-outbound-in-vmess-urlgfw-with-your-down-v2ray-config-file/</guid><pubDate>Fri, 18 Sep 2020 00:36:18 GMT</pubDate></item><item><title>How openSUSE rollbacks when using brtfs</title><link>https://fpghwd.github.io/posts/how-opensuse-rollback-when-using-brtfs/</link><dc:creator>Wang Ding</dc:creator><description>&lt;div&gt;&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;b&gt;Brtfs&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Btrfs, an abbreviation for b-tree file system. By default, openSUSE is set up using Btrfs and snapshots for the root partition. Snapshots allow you to easily roll back your system if needed after applying updates, or to back up files. Snapshots can easily be managed with Snapper.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;b&gt;Yast Filesystem Snapshots&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
In yast Filesystem Snapshots, sensitive changes in system files(directories in / like /etc, /bin, excluding /home) will be listed and You can check difference between pre-changed status and post-changed status. One can specify the volumn to rollback via time or file(s’) changes.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;b&gt;Rollback&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Boot and on grub(2) interface, choose “Advance bootloader for openSUSE” and enter in and choose item you want to rollback to. And then “openSUSE Tumbleweed” to boot normally. Login and run &lt;code&gt;sudo snapper rollback &amp;amp;&amp;amp; reboot&lt;/code&gt; in opened terminal, then relogin. And everything is OK.
&lt;/p&gt;&lt;/div&gt;</description><category>openSUSE</category><guid>https://fpghwd.github.io/posts/how-opensuse-rollback-when-using-brtfs/</guid><pubDate>Mon, 13 Jul 2020 07:16:58 GMT</pubDate></item></channel></rss>